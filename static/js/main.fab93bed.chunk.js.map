{"version":3,"sources":["static/cook_avatar.png","static/no_results.jpg","components/Navbar.js","actions/actions.js","components/Search.js","components/ListElement.js","components/List.js","components/Placeholder.js","components/MainPage.js","components/Recipe.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","search","value","dispatch","axios","get","concat","then","res","type","payload","data","results","sort","b","title","expectResults","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleSubmit","bind","assertThisInitialized","onChange","e","preventDefault","setState","target","style","paddingTop","onSubmit","TextField_default","marginRight","placeholder","autoFocus","required","Button_default","Component","connect","ListElement","ListItem_default","ListItemAvatar_default","Avatar_default","alt","src","item","thumbnail","require","ListItemText_default","primary","Link","to","textDecoration","secondary","ingredients","List","listData","map","index","components_ListElement","key","Placeholder","display","alignItems","justifyContent","width","height","MainPage","Fragment","components_Search","length","components_List","components_Placeholder","Recipe","index_min_default","url","filter","match","params","href","initialState","combineReducers","arguments","undefined","action","middleware","thunk","store","createStore","rootReducer","applyMiddleware","apply","App","es","BrowserRouter","basename","components_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fab93bed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cook_avatar.aab37981.png\";","module.exports = __webpack_public_path__ + \"static/media/no_results.fddf24c1.jpg\";","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n      <div>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"title\" color=\"inherit\">\r\n              Recipe Puppy App\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import axios from 'axios';\r\n\r\nexport const search = (value) => dispatch => {\r\n    axios.get(`https://cors-anywhere.herokuapp.com/http://www.recipepuppy.com/api/?q=${value}&p=1`)\r\n    .then(res => dispatch({\r\n      type:'UPDATE_STATE',\r\n      payload:{\r\n          data: res.data.results.sort((a,b)=>(b.title < a.title)),\r\n          expectResults:true\r\n      }\r\n    })\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport { search } from '../actions/actions';\r\n\r\nclass Search extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      value:''\r\n    }\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n    this.props.search(this.state.value);\r\n  }\r\n\r\n  onChange(e){\r\n    this.setState({value:e.target.value})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: 15 }}>\r\n      <form onSubmit={this.handleSubmit}>\r\n      <TextField\r\n        style={{marginRight: '15px'}}\r\n        placeholder=\"Search ingredient\"\r\n        value={this.state.value}\r\n        onChange={this.onChange}\r\n        autoFocus={true}\r\n        required\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        type=\"submit\">\r\n      Search\r\n      </Button>\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default connect(null,{ search })(Search);\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ListElement = (props) => (\r\n   <ListItem>\r\n     <ListItemAvatar>\r\n       <Avatar alt=\"Avatar\" src={props.item.thumbnail?props.item.thumbnail:require(\"../static/cook_avatar.png\")} />\r\n     </ListItemAvatar>\r\n       <ListItemText\r\n         primary={\r\n           <Link\r\n             to={`/recipe/${props.item.title}`}\r\n             style={{ textDecoration: 'none' }}>\r\n               <Typography color=\"textPrimary\">\r\n                {props.item.title}\r\n               </Typography>\r\n           </Link>}\r\n         secondary={props.item.ingredients}\r\n       />\r\n   </ListItem>\r\n);\r\n\r\nexport default ListElement;\r\n","import React from 'react';\r\nimport ListElement from './ListElement';\r\n\r\nconst List = (props) => (\r\n  <ul>\r\n    {props.listData.map((item,index)=>{\r\n      return <ListElement key={index} item={item} />\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default List;\r\n","import React from 'react';\r\n\r\nconst Placeholder = () => (\r\n  <div\r\n    style={{display: 'flex', alignItems: 'center', justifyContent:'center'}}\r\n  >\r\n    <img\r\n      alt=\"No results!\"\r\n      src={require(\"../static/no_results.jpg\")}\r\n      style={{width: '300px', height: '300px'}}\r\n       />\r\n  </div>\r\n);\r\n\r\nexport default Placeholder;\r\n","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport List from './List';\r\nimport Placeholder from './Placeholder';\r\nimport { connect } from 'react-redux';\r\nimport { search } from '../actions/actions';\r\n\r\nclass MainPage extends Component{\r\n  render(){\r\n    return(\r\n      <React.Fragment>\r\n       <Search  />\r\n      {(this.props.listData.length || !this.props.expectResults)?\r\n       <List listData={this.props.listData} /> : <Placeholder/>}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  listData: state.search.data,\r\n  expectResults: state.search.expectResults\r\n})\r\n\r\nexport default connect(mapStateToProps, { search })(MainPage);\r\n","import React, { Component } from 'react';\r\nimport Iframe from 'react-iframe';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { search } from '../actions/actions';\r\n\r\nclass Recipe extends Component{\r\n  render(){\r\n    return(\r\n    <div style={{ paddingTop: 15 }}>\r\n    <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\">\r\n        Go back\r\n      </Button>\r\n    </Link>\r\n    <Iframe url={this.props.listData.filter((item)=>(item.title===this.props.match.params.title)).length?\r\n                 this.props.listData.filter((item)=>(item.title===this.props.match.params.title))[0].href:\"\"}\r\n        width=\"100%\"\r\n        height=\"75vh\"\r\n        position=\"relative\"\r\n    />\r\n    </div>\r\n  )\r\n }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  listData: state.search.data\r\n})\r\n\r\nexport default connect(mapStateToProps, { search })(Recipe);\r\n","const initialState = {\r\n  data:[],\r\n  expectResults: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n  switch(action.type){\r\n    case 'UPDATE_STATE':\r\n      return{\r\n        data: action.payload.data,\r\n        expectResults: action.payload.expectResults\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers({search: searchReducer});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState ={};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport MainPage from './components/MainPage';\r\nimport Recipe from './components/Recipe';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport { Provider } from 'react-redux'\r\nimport  store from './store';\r\n\r\nconst App = () => {\r\n    return (\r\n      <Provider store={store} >\r\n      <Router basename=\"/recipe-puppy-app\">\r\n      <React.Fragment>\r\n        <Navbar />\r\n        <Switch>\r\n        <Route exact path=\"/\" component={ MainPage }/>\r\n        <Route exact path=\"/recipe/:title\" component={ Recipe }/>\r\n        </Switch>\r\n      </React.Fragment>\r\n      </Router>\r\n      </Provider>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}